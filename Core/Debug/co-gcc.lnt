/* Compiler configuration for gcc 10.2.0.
   Using the options:  
   Generated on 2021-02-27 11:48:42 with pclp_config version 1.3.0.
   Modified by Mario Senecic
 */

// Base Options
//     Extensions
+fdi  // Starts its #include search in the directory of the including file
+fgi  // Enable GNU inline semantics
+fld  // Enable support for gcc label designators
+ppw(include_next)  // Enable support for #include_next
+ppw(ident)  // Enable support for #ident
+ppw(warning)  // Enable support for #warning
+ppw(import)  // Enable support for #import
+ppw(sccs)  // Enable support for #sccs
+ppw(unassert)  // Enable support for #unassert
+cpp(.cc)  // Make .cc a C++ file extension in addition to the default of .cpp and .cxx
+rw(__typeof__)
+rw(_Decimal32)
+rw(_Decimal64)
+rw(_Decimal128)
+rw(__alignof)
+rw(__attribute)
+rw(__builtin_choose_expr)
+rw(__builtin_offsetof)
+rw(__builtin_types_compatible_p)
+rw(__builtin_va_arg)
+rw(__extension__)
+rw(__imag)
+rw(__label__)
+rw(__real)
+rw(__thread)
+rw(__PRETTY_FUNCTION__)
+rw(typeof)
-rw_asgn(__inline,inline)
-rw_asgn(__inline__,inline)
-rw_asgn(__signed__,signed)
-rw_asgn(__signed,signed)
-rw_asgn(__volatile__,volatile)
-rw_asgn(__volatile,volatile)
-rw_asgn(__alignof__,__alignof)
-rw_asgn(__const,const)
-rw_asgn(asm,_up_to_brackets)
-rw_asgn(__asm,_up_to_brackets)
-rw_asgn(__asm__,_up_to_brackets)
--u_GLIBCXX_BUILTIN_IS_SAME_AS  // Prevent use of __is_same_as
--u_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED  // Prevent use of __is_constant_evaluated

//     Suppressions
-emacro(530, va_start)
-emacro(530, va_end)
-emacro(413, offsetof)
-emacro(160 523 505 866,assert)

// FreeRTOS coding style compatibility
-e970

// Tabs are at 4 stops
-t4

// Do not warn about standard library
-wlib(0)

// Do not break messages of any particular width
-width(0)

// Treat angle bracket headers as library headers
+libclass( angle )

// Transformed compiler options

// Size Options
-si4 -sl4 -sll8 -ss2 -sw4 -sp4 -sf4 -sd8 -sld8 +fzl

// Include Options
--i"/usr/lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/include/c++/10.2.0"
--i"/usr/lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/include/c++/10.2.0/arm-none-eabi"
--i"/usr/lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/include/c++/10.2.0/backward"
--i"/usr/lib/gcc/arm-none-eabi/10.2.0/include"
--i"/usr/lib/gcc/arm-none-eabi/10.2.0/include-fixed"
--i"/usr/lib/gcc/arm-none-eabi/10.2.0/../../../../arm-none-eabi/include"

+libh(co-gcc.h)
-header(co-gcc.h)

// Run MISRA checks
Core/Debug/au-misra1.lnt
